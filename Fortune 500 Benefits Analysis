#This analysis utilized the following Fortune 500 dataset:

CREATE TABLE fortune_companies (
    company_id INTEGER PRIMARY KEY,
    company_name TEXT,
    industry TEXT,
    revenue REAL,
    employees INTEGER,
    healthcare_benefits BIT,
    paid_time_off_days INTEGER,
    maternity_leave_weeks INTEGER,
    avg_employee_tenure REAL
);

INSERT INTO fortune_companies (company_name, industry, revenue, employees, healthcare_benefits, paid_time_off_days, maternity_leave_weeks, avg_employee_tenure)
VALUES
    ('Apple Inc.', 'Technology', 365.7, 147000, 1, 20, 12, 4.5),
    ('Walmart Inc.', 'Retail', 523.96, 2200000, 1, 15, 8, 6.2),
    ('Exxon Mobil Corporation', 'Energy', 265.01, 72000, 0, 18, 6, 7.8),
    ('Amazon.com Inc.', 'Technology', 386.06, 1370000, 1, 22, 14, 5.1),
    ('JPMorgan Chase & Co.', 'Financials', 160.1, 255998, 1, 21, 12, 6.9),
    ('Verizon Communications Inc.', 'Telecommunications', 131.88, 132600, 0, 15, 6, 5.5),
    ('Company A', 'Retail', 235.4, 2000, 1, 18, 10, 5.8),
    ('Company B', 'Healthcare', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company C', 'Manufacturing', 300.2, 2000, 1, 18, 10, 5.8),
    ('Company D', 'Healthcare', 150.5, 3500, 1, 20, 12, 6.5),
    ('Company E', 'Finance', 280.7, 1800, 0, 14, 8, 4.2),
    ('Company F', 'Technology', 420.1, 2500, 1, 22, 14, 7.1),
    ('Company G', 'Retail', 190.8, 1500, 1, 16, 9, 5.3),
    ('Company H', 'Energy', 280.5, 2200, 0, 15, 8, 6.8),
    ('Company I', 'Telecommunications', 110.3, 1800, 1, 19, 11, 4.9),
    ('Company J', 'Manufacturing', 390.6, 2700, 1, 21, 13, 6.2),
    ('Company K', 'Healthcare', 180.2, 3200, 1, 17, 9, 7.4),
    ('Company L', 'Finance', 230.4, 1900, 0, 13, 7, 5.6),
    ('Company M', 'Technology', 340.9, 2800, 1, 23, 15, 6.9),
    ('Company N', 'Retail', 200.6, 1600, 1, 15, 8, 4.7),
    ('Company O', 'Energy', 260.2, 2400, 0, 14, 7, 6.1),
    ('Company P', 'Telecommunications', 130.5, 2100, 1, 20, 12, 5.3),
    ('Company Q', 'Manufacturing', 360.0, 2900, 1, 22, 14, 7.8),
    ('Company R', 'Technology', 400.7, 2300, 1, 22, 13, 5.7),
    ('Company S', 'Retail', 210.8, 1600, 0, 16, 9, 4.9),
    ('Company T', 'Energy', 290.5, 2200, 1, 15, 8, 7.2),
    ('Company U', 'Telecommunications', 140.3, 1900, 1, 20, 12, 6.1),
    ('Company V', 'Manufacturing', 350.6, 2800, 1, 22, 14, 5.4),
    ('Company W', 'Healthcare', 160.2, 3300, 0, 18, 10, 4.8),
    ('Company X', 'Finance', 240.4, 2000, 1, 13, 7, 7.1),
    ('Company Y', 'Technology', 320.9, 2700, 1, 23, 15, 5.6),
    ('Company Z', 'Retail', 180.6, 1400, 0, 14, 8, 6.3),
    ('Company AA', 'Energy', 240.2, 2600, 1, 17, 9, 6.5),
    ('Company BB', 'Telecommunications', 120.5, 2100, 0, 19, 11, 4.5),
    ('Company CC', 'Manufacturing', 380.0, 3000, 1, 21, 13, 7.3),
    ('Company DD', 'Healthcare', 170.2, 3200, 1, 17, 9, 5.8),
    ('Company EE', 'Finance', 250.4, 1900, 0, 12, 6, 6.4),
    ('Company FF', 'Technology', 300.9, 2500, 1, 24, 16, 6.9),
    ('Company GG', 'Retail', 190.6, 1700, 0, 13, 7, 5.2),
    ('Company HH', 'Energy', 280.2, 2300, 1, 16, 9, 6.8),
    ('Company II', 'Telecommunications', 110.5, 2000, 1, 21, 12, 4.9),
    ('Company JJ', 'Manufacturing', 370.0, 3100, 1, 20, 12, 7.6),
    ('Company KK', 'Healthcare', 150.2, 3400, 0, 16, 8, 5.3);

# Analysis: 

#Use a SELECT statement to order the items by revenue
SELECT * 
FROM fortune_companies
ORDER BY revenue desc; 

#Use a SELECT statement to find the top 5 compnies with the highest revenue order by revenue
SELECT company_name, revenue
FROM fortune_companies
ORDER BY revenue desc
LIMIT 5;

#Use a statistic to see which industries generated the most revenue
SELECT COUNT(industry) AS industry_count, industry, ROUND(SUM(revenue), 2) AS total_revenue
FROM fortune_companies
GROUP BY industry
ORDER BY total_revenue DESC;

#Which industries demonstrate the highest weighted average revenue, considering the number of companies in each industry?
SELECT industry, 
      ROUND(SUM(revenue) / COUNT(industry), 2) AS weighted_aver_revenue_per_industry
FROM fortune_companies
GROUP BY industry
ORDER BY weighted_aver_revenue_per_industry DESC;

#Which industries weighted average revenue is greater than the overall industry average within the dataset?
  #Industry revenues in previous query were skewed as each industry has a different number of companies contributing to overall revenue
SELECT company_name, industry, revenue 
FROM fortune_companies
WHERE revenue <
      (SELECT ROUND(SUM(revenue) / COUNT(industry), 2) AS weighted_aver_revenue_per_industry
      FROM fortune_companies
      )
ORDER BY revenue DESC;

#Use a statistic to see if there is a correlation between revenue and paid time off
  #As flexibility and PTO become more important for employees, I was curious if there was impact on revenue, possibly poiting to an impact on productivity and PTO 
SELECT company_name, revenue, paid_time_off_days
FROM fortune_companies
ORDER BY revenue DESC, paid_time_off_days DESC;

#Use statstic and having clause to look at average industry revenue compared to average number of days off
SELECT industry, 
      ROUND(AVG(revenue)) AS average_revenue, 
      ROUND(AVG(paid_time_off_days)) AS average_paid_time_off
FROM fortune_companies
GROUP BY industry
HAVING AVG(revenue) >= 200
   AND AVG(paid_time_off_days) > 20;
  
#Use a statistic to see if there is a correlation between employee tenture and benefits 
  #With the increase of job hopping, I was curious if benefits played a factor in an employees decision to leave a job
SELECT healthcare_benefits,
      ROUND(AVG(paid_time_off_days), 2) AS avg_paid_time_off,
      ROUND(AVG(maternity_leave_weeks), 2) AS avg_maternity_leave,
      ROUND(AVG(avg_employee_tenure), 2) AS avg_employee_tenure
FROM fortune_companies
GROUP BY healthcare_benefits
ORDER BY avg_employee_tenure DESC;

#What are the top 5 companies with above average benefits and tenure?
SELECT company_name,
      AVG(paid_time_off_days) AS avg_paid_time_off,
      AVG(maternity_leave_weeks) AS avg_maternity_leave,
      AVG(avg_employee_tenure) AS avg_employee_tenure
FROM fortune_companies
GROUP BY company_name
HAVING 
      ROUND(AVG(paid_time_off_days), 2) > 15
      AND ROUND(AVG(maternity_leave_weeks), 2) > 7
      AND ROUND(AVG(avg_employee_tenure), 2) > 5
ORDER BY AVG(avg_employee_tenure) DESC
LIMIT 5;

#Which industry is the most flexible?
SELECT industry, ROUND(AVG(paid_time_off_days), 2) AS avg_pto
FROM fortune_companies
GROUP BY industry
ORDER BY avg_pto DESC

#Which Technology companies have the most flexibility based on paid time off?
  #Based on the previous query, Technology had the most flexibility 
SELECT company_name,
    CASE
      WHEN paid_time_off_days <= 15 THEN 'not flexible'
      WHEN paid_time_off_days > 15 AND paid_time_off_days <= 19 THEN 'flexible'
      ELSE 'very flexible'
    END as flexibility 
FROM fortune_companies
WHERE industry = 'Technology';

