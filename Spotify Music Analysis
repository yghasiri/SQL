# For this project, I downloaded Spotify data from Kaggle.

# Then, I created a table to insert Spotify data into.

# Finally, I performed analytics on the data using SQL. 

# Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

# Then, I inserted the Spotify Data .csv into the table.

# Next, I explored the data using the following SQL. 

# Quick select clause to see what data and columns I am working it 
SELECT * FROM Spotifydata LIMIT 10

# Who are the top 10 most popular artists?
SELECT artist_name, popularity 
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10;

# Who are the most danceable artists?
SELECT artist_name, AVG(danceability) AS avg_danceability
FROM Spotifydata
GROUP BY artist_name
ORDER BY avg_danceability DESC
LIMIT 10

# Which songs have the most lyrics?
SELECT track_name, speechiness
FROM Spotifydata
ORDER BY speechiness DESC
LIMIT 10 

# Is there a correlation between danceability and energy in the tracks?
SELECT AVG(danceability) AS avg_danceability, AVG(energy) AS avg_energy
FROM Spotifydata;

# Are songs with higher danceability longer?
SELECT danceability, AVG(duration_ms) AS avg_duration
FROM Spotifydata
GROUP BY danceability
ORDER BY danceability DESC;

# Is there a correlation between popularity and song key?
SELECT song_key, COUNT(*) AS key_count, AVG(popularity) AS avg_popularity
FROM Spotifydata
GROUP BY song_key
ORDER BY  avg_popularity DESC, key_count DESC
LIMIT 5;

# What was the most common key signature?
## Mode indicates if the key is in major or minor, which is an important part of a key signature
SELECT song_key, song_mode, COUNT(*) AS key_mode_count, AVG(popularity) AS avg_popularity
FROM Spotifydata
GROUP BY song_key, song_mode
ORDER BY key_mode_count DESC, avg_popularity DESC
LIMIT 1;

# Are happy songs or sad songs more popular?
SELECT valence, popularity
FROM Spotifydata
ORDER BY popularity DESC

# What is the least popular time signature?
SELECT time_signature, AVG(popularity)
FROM Spotifydata
GROUP BY time_signature
ORDER BY popularity
LIMIT 1;

# What is the average length of the very popular songs?
## 'Very popular' are any songs with popularity over 90, and I am converting milliseconds into seconds
SELECT (AVG(duration_ms) / 1000) as avg_duration_secs
FROM Spotifydata
WHERE popularity > 90;
